{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\weather-app\\\\src\\\\App.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport SearchBar from './components/SearchBar';\nimport CurrentWeather from './components/CurrentWeather';\nimport Forecast from './components/Forecast';\n// Comment out this import temporarily until we fix it\n// import WeatherAnimations from './components/WeatherAnimations';\nimport { fetchWeatherData, fetchForecastData } from './utils/api';\nimport './styles/App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [weatherData, setWeatherData] = useState(null);\n  const [forecastData, setForecastData] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  const [backgroundCondition, setBackgroundCondition] = useState('');\n  useEffect(() => {\n    // Optional: Get user's location for initial weather display\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(position => {\n        const {\n          latitude,\n          longitude\n        } = position.coords;\n        handleLocationSearch(latitude, longitude);\n      }, error => {\n        console.error(\"Error getting location:\", error);\n        // Default to a major city if geolocation fails\n        handleSearch(\"London\");\n      });\n    } else {\n      // Default to a major city if geolocation is not supported\n      handleSearch(\"London\");\n    }\n  }, []);\n  const handleLocationSearch = async (lat, lon) => {\n    setLoading(true);\n    setError('');\n    try {\n      // You'd need to modify your API to handle coordinates\n      // This is a placeholder assuming your API can handle it\n      const weatherResponse = await fetchWeatherData(`${lat},${lon}`);\n      setWeatherData(weatherResponse);\n      setBackgroundCondition(weatherResponse.condition);\n      const forecastResponse = await fetchForecastData(`${lat},${lon}`);\n      setForecastData(forecastResponse);\n      setLoading(false);\n    } catch (err) {\n      setError(\"Couldn't get weather for your location. Please search for a city instead.\");\n      setLoading(false);\n    }\n  };\n  const handleSearch = async city => {\n    setLoading(true);\n    setError('');\n    try {\n      const weatherResponse = await fetchWeatherData(city);\n      setWeatherData(weatherResponse);\n      setBackgroundCondition(weatherResponse.condition);\n      const forecastResponse = await fetchForecastData(city);\n      setForecastData(forecastResponse);\n      setLoading(false);\n    } catch (err) {\n      setError(err.message || 'An error occurred. Please try again.');\n      setLoading(false);\n      setWeatherData(null);\n      setForecastData(null);\n    }\n  };\n\n  // Render dynamic weather-based background elements\n  const renderWeatherBackground = () => {\n    if (!backgroundCondition) return null;\n    const conditionLower = backgroundCondition.toLowerCase();\n    if (conditionLower.includes('clear') || conditionLower.includes('sun')) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"weather-background\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"sun-animation\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this);\n    } else if (conditionLower.includes('cloud') && !conditionLower.includes('rain')) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"weather-background\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"cloud cloud-1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"cloud cloud-2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this);\n    }\n    return null;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: [renderWeatherBackground(), /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"app-title\",\n      children: \"Weather Forecast\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SearchBar, {\n      onSearch: handleSearch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading-spinner\",\n      children: \"Loading weather data...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 19\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 17\n    }, this), weatherData && /*#__PURE__*/_jsxDEV(CurrentWeather, {\n      data: weatherData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 23\n    }, this), forecastData && /*#__PURE__*/_jsxDEV(Forecast, {\n      data: forecastData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 24\n    }, this), (weatherData || forecastData) && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app-footer\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Data provided by OpenWeatherMap\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"Ym5XdGCqB7xoIiRv6G+0v9w1O8U=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","SearchBar","CurrentWeather","Forecast","fetchWeatherData","fetchForecastData","jsxDEV","_jsxDEV","App","_s","weatherData","setWeatherData","forecastData","setForecastData","loading","setLoading","error","setError","backgroundCondition","setBackgroundCondition","navigator","geolocation","getCurrentPosition","position","latitude","longitude","coords","handleLocationSearch","console","handleSearch","lat","lon","weatherResponse","condition","forecastResponse","err","city","message","renderWeatherBackground","conditionLower","toLowerCase","includes","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSearch","data","_c","$RefreshReg$"],"sources":["C:/Users/user/weather-app/src/App.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport SearchBar from './components/SearchBar';\r\nimport CurrentWeather from './components/CurrentWeather';\r\nimport Forecast from './components/Forecast';\r\n// Comment out this import temporarily until we fix it\r\n// import WeatherAnimations from './components/WeatherAnimations';\r\nimport { fetchWeatherData, fetchForecastData } from './utils/api';\r\nimport './styles/App.css';\r\n\r\nfunction App() {\r\n  const [weatherData, setWeatherData] = useState(null);\r\n  const [forecastData, setForecastData] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState('');\r\n  const [backgroundCondition, setBackgroundCondition] = useState('');\r\n\r\n  useEffect(() => {\r\n    // Optional: Get user's location for initial weather display\r\n    if (navigator.geolocation) {\r\n      navigator.geolocation.getCurrentPosition(\r\n        (position) => {\r\n          const { latitude, longitude } = position.coords;\r\n          handleLocationSearch(latitude, longitude);\r\n        },\r\n        (error) => {\r\n          console.error(\"Error getting location:\", error);\r\n          // Default to a major city if geolocation fails\r\n          handleSearch(\"London\");\r\n        }\r\n      );\r\n    } else {\r\n      // Default to a major city if geolocation is not supported\r\n      handleSearch(\"London\");\r\n    }\r\n  }, []);\r\n\r\n  const handleLocationSearch = async (lat, lon) => {\r\n    setLoading(true);\r\n    setError('');\r\n    \r\n    try {\r\n      // You'd need to modify your API to handle coordinates\r\n      // This is a placeholder assuming your API can handle it\r\n      const weatherResponse = await fetchWeatherData(`${lat},${lon}`);\r\n      setWeatherData(weatherResponse);\r\n      setBackgroundCondition(weatherResponse.condition);\r\n      \r\n      const forecastResponse = await fetchForecastData(`${lat},${lon}`);\r\n      setForecastData(forecastResponse);\r\n      \r\n      setLoading(false);\r\n    } catch (err) {\r\n      setError(\"Couldn't get weather for your location. Please search for a city instead.\");\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleSearch = async (city) => {\r\n    setLoading(true);\r\n    setError('');\r\n    \r\n    try {\r\n      const weatherResponse = await fetchWeatherData(city);\r\n      setWeatherData(weatherResponse);\r\n      setBackgroundCondition(weatherResponse.condition);\r\n      \r\n      const forecastResponse = await fetchForecastData(city);\r\n      setForecastData(forecastResponse);\r\n      \r\n      setLoading(false);\r\n    } catch (err) {\r\n      setError(err.message || 'An error occurred. Please try again.');\r\n      setLoading(false);\r\n      setWeatherData(null);\r\n      setForecastData(null);\r\n    }\r\n  };\r\n\r\n  // Render dynamic weather-based background elements\r\n  const renderWeatherBackground = () => {\r\n    if (!backgroundCondition) return null;\r\n    \r\n    const conditionLower = backgroundCondition.toLowerCase();\r\n    \r\n    if (conditionLower.includes('clear') || conditionLower.includes('sun')) {\r\n      return (\r\n        <div className=\"weather-background\">\r\n          <div className=\"sun-animation\"></div>\r\n        </div>\r\n      );\r\n    } else if (conditionLower.includes('cloud') && !conditionLower.includes('rain')) {\r\n      return (\r\n        <div className=\"weather-background\">\r\n          <div className=\"cloud cloud-1\"></div>\r\n          <div className=\"cloud cloud-2\"></div>\r\n        </div>\r\n      );\r\n    }\r\n    \r\n    return null;\r\n  };\r\n\r\n  return (\r\n    <div className=\"app-container\">\r\n      {renderWeatherBackground()}\r\n      {/* Comment out the WeatherAnimations component for now */}\r\n      {/* {backgroundCondition && <WeatherAnimations condition={backgroundCondition} />} */}\r\n      \r\n      <h1 className=\"app-title\">Weather Forecast</h1>\r\n      <SearchBar onSearch={handleSearch} />\r\n      \r\n      {loading && <div className=\"loading-spinner\">Loading weather data...</div>}\r\n      \r\n      {error && <div className=\"error-message\">{error}</div>}\r\n      \r\n      {weatherData && <CurrentWeather data={weatherData} />}\r\n      \r\n      {forecastData && <Forecast data={forecastData} />}\r\n      \r\n      {(weatherData || forecastData) && (\r\n        <div className=\"app-footer\">\r\n          <p>Data provided by OpenWeatherMap</p>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}