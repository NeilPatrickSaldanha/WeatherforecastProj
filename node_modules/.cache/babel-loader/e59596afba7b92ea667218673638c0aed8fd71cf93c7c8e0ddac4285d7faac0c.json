{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\weather-app\\\\src\\\\App.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport SearchBar from './components/SearchBar';\nimport CurrentWeather from './components/CurrentWeather';\nimport Forecast from './components/Forecast';\nimport { useMockData } from './utils/api';\nimport './styles/App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [weatherData, setWeatherData] = useState(null);\n  const [forecastData, setForecastData] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n\n  // Get mock API functions\n  const {\n    fetchWeatherData,\n    fetchForecastData\n  } = useMockData(true);\n  const handleSearch = async city => {\n    setLoading(true);\n    setError('');\n    try {\n      const weatherResponse = await fetchWeatherData(city);\n      setWeatherData(weatherResponse);\n      const forecastResponse = await fetchForecastData(city);\n      setForecastData(forecastResponse);\n      setLoading(false);\n    } catch (err) {\n      setError(err.message || 'An error occurred. Please try again.');\n      setLoading(false);\n      setWeatherData(null);\n      setForecastData(null);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"app-title\",\n      children: \"Weather Forecast\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SearchBar, {\n      onSearch: handleSearch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading-spinner\",\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 19\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 17\n    }, this), weatherData && /*#__PURE__*/_jsxDEV(CurrentWeather, {\n      data: weatherData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 23\n    }, this), forecastData && /*#__PURE__*/_jsxDEV(Forecast, {\n      data: forecastData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 24\n    }, this), (weatherData || forecastData) && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app-footer\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Data provided by Weather API (Mock Data)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"8d/u9XLWCd6bziA7yeKhSzCCZWc=\", false, function () {\n  return [useMockData];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","SearchBar","CurrentWeather","Forecast","useMockData","jsxDEV","_jsxDEV","App","_s","weatherData","setWeatherData","forecastData","setForecastData","loading","setLoading","error","setError","fetchWeatherData","fetchForecastData","handleSearch","city","weatherResponse","forecastResponse","err","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSearch","data","_c","$RefreshReg$"],"sources":["C:/Users/user/weather-app/src/App.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport SearchBar from './components/SearchBar';\r\nimport CurrentWeather from './components/CurrentWeather';\r\nimport Forecast from './components/Forecast';\r\nimport { useMockData } from './utils/api';\r\nimport './styles/App.css';\r\n\r\nfunction App() {\r\n  const [weatherData, setWeatherData] = useState(null);\r\n  const [forecastData, setForecastData] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState('');\r\n  \r\n  // Get mock API functions\r\n  const { fetchWeatherData, fetchForecastData } = useMockData(true);\r\n\r\n  const handleSearch = async (city) => {\r\n    setLoading(true);\r\n    setError('');\r\n    \r\n    try {\r\n      const weatherResponse = await fetchWeatherData(city);\r\n      setWeatherData(weatherResponse);\r\n      \r\n      const forecastResponse = await fetchForecastData(city);\r\n      setForecastData(forecastResponse);\r\n      \r\n      setLoading(false);\r\n    } catch (err) {\r\n      setError(err.message || 'An error occurred. Please try again.');\r\n      setLoading(false);\r\n      setWeatherData(null);\r\n      setForecastData(null);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"app-container\">\r\n      <h1 className=\"app-title\">Weather Forecast</h1>\r\n      <SearchBar onSearch={handleSearch} />\r\n      \r\n      {loading && <div className=\"loading-spinner\">Loading...</div>}\r\n      \r\n      {error && <div className=\"error-message\">{error}</div>}\r\n      \r\n      {weatherData && <CurrentWeather data={weatherData} />}\r\n      \r\n      {forecastData && <Forecast data={forecastData} />}\r\n      \r\n      {(weatherData || forecastData) && (\r\n        <div className=\"app-footer\">\r\n          <p>Data provided by Weather API (Mock Data)</p>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}