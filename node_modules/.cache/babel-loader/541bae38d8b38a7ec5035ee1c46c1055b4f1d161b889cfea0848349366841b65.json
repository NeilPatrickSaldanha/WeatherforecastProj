{"ast":null,"code":"import React,{useState,useEffect}from'react';import SearchBar from'./components/SearchBar';import CurrentWeather from'./components/CurrentWeather';import Forecast from'./components/Forecast';import WeatherAnimations from'./components/WeatherAnimations';import{fetchWeatherData,fetchForecastData}from'./utils/api';import'./styles/App.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function App(){const[weatherData,setWeatherData]=useState(null);const[forecastData,setForecastData]=useState(null);const[loading,setLoading]=useState(false);const[error,setError]=useState('');const[backgroundCondition,setBackgroundCondition]=useState('');useEffect(()=>{// Optional: Get user's location for initial weather display\nif(navigator.geolocation){navigator.geolocation.getCurrentPosition(position=>{const{latitude,longitude}=position.coords;handleLocationSearch(latitude,longitude);},error=>{console.error(\"Error getting location:\",error);// Default to a major city if geolocation fails\nhandleSearch(\"London\");});}else{// Default to a major city if geolocation is not supported\nhandleSearch(\"London\");}},[]);const handleLocationSearch=async(lat,lon)=>{setLoading(true);setError('');try{// You'd need to modify your API to handle coordinates\n// This is a placeholder assuming your API can handle it\nconst weatherResponse=await fetchWeatherData(`${lat},${lon}`);setWeatherData(weatherResponse);setBackgroundCondition(weatherResponse.condition);const forecastResponse=await fetchForecastData(`${lat},${lon}`);setForecastData(forecastResponse);setLoading(false);}catch(err){setError(\"Couldn't get weather for your location. Please search for a city instead.\");setLoading(false);}};const handleSearch=async city=>{setLoading(true);setError('');try{const weatherResponse=await fetchWeatherData(city);setWeatherData(weatherResponse);setBackgroundCondition(weatherResponse.condition);const forecastResponse=await fetchForecastData(city);setForecastData(forecastResponse);setLoading(false);}catch(err){setError(err.message||'An error occurred. Please try again.');setLoading(false);setWeatherData(null);setForecastData(null);}};// Render dynamic weather-based background elements\nconst renderWeatherBackground=()=>{if(!backgroundCondition)return null;const conditionLower=backgroundCondition.toLowerCase();if(conditionLower.includes('clear')||conditionLower.includes('sun')){return/*#__PURE__*/_jsx(\"div\",{className:\"weather-background\",children:/*#__PURE__*/_jsx(\"div\",{className:\"sun-animation\"})});}else if(conditionLower.includes('cloud')&&!conditionLower.includes('rain')){return/*#__PURE__*/_jsxs(\"div\",{className:\"weather-background\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"cloud cloud-1\"}),/*#__PURE__*/_jsx(\"div\",{className:\"cloud cloud-2\"})]});}return null;};return/*#__PURE__*/_jsxs(\"div\",{className:\"app-container\",children:[renderWeatherBackground(),backgroundCondition&&/*#__PURE__*/_jsx(WeatherAnimations,{condition:backgroundCondition}),/*#__PURE__*/_jsx(\"h1\",{className:\"app-title\",children:\"Weather Forecast\"}),/*#__PURE__*/_jsx(SearchBar,{onSearch:handleSearch}),loading&&/*#__PURE__*/_jsx(\"div\",{className:\"loading-spinner\",children:\"Loading weather data...\"}),error&&/*#__PURE__*/_jsx(\"div\",{className:\"error-message\",children:error}),weatherData&&/*#__PURE__*/_jsx(CurrentWeather,{data:weatherData}),forecastData&&/*#__PURE__*/_jsx(Forecast,{data:forecastData}),(weatherData||forecastData)&&/*#__PURE__*/_jsxs(\"div\",{className:\"app-footer\",children:[/*#__PURE__*/_jsx(\"p\",{children:\"Data provided by OpenWeatherMap\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"creator-info\",children:[/*#__PURE__*/_jsx(\"span\",{children:\"Created by Neil Patrick\"}),/*#__PURE__*/_jsx(\"a\",{href:\"https://github.com/NeilPatrickSaldanha\",target:\"_blank\",rel:\"noopener noreferrer\",children:\"GitHub\"})]})]})]});}export default App;","map":{"version":3,"names":["React","useState","useEffect","SearchBar","CurrentWeather","Forecast","WeatherAnimations","fetchWeatherData","fetchForecastData","jsx","_jsx","jsxs","_jsxs","App","weatherData","setWeatherData","forecastData","setForecastData","loading","setLoading","error","setError","backgroundCondition","setBackgroundCondition","navigator","geolocation","getCurrentPosition","position","latitude","longitude","coords","handleLocationSearch","console","handleSearch","lat","lon","weatherResponse","condition","forecastResponse","err","city","message","renderWeatherBackground","conditionLower","toLowerCase","includes","className","children","onSearch","data","href","target","rel"],"sources":["C:/Users/user/weatherApp/src/App.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport SearchBar from './components/SearchBar';\r\nimport CurrentWeather from './components/CurrentWeather';\r\nimport Forecast from './components/Forecast';\r\nimport WeatherAnimations from './components/WeatherAnimations';\r\nimport { fetchWeatherData, fetchForecastData } from './utils/api';\r\nimport './styles/App.css';\r\n\r\nfunction App() {\r\n  const [weatherData, setWeatherData] = useState(null);\r\n  const [forecastData, setForecastData] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState('');\r\n  const [backgroundCondition, setBackgroundCondition] = useState('');\r\n\r\n  useEffect(() => {\r\n    // Optional: Get user's location for initial weather display\r\n    if (navigator.geolocation) {\r\n      navigator.geolocation.getCurrentPosition(\r\n        (position) => {\r\n          const { latitude, longitude } = position.coords;\r\n          handleLocationSearch(latitude, longitude);\r\n        },\r\n        (error) => {\r\n          console.error(\"Error getting location:\", error);\r\n          // Default to a major city if geolocation fails\r\n          handleSearch(\"London\");\r\n        }\r\n      );\r\n    } else {\r\n      // Default to a major city if geolocation is not supported\r\n      handleSearch(\"London\");\r\n    }\r\n  }, []);\r\n\r\n  const handleLocationSearch = async (lat, lon) => {\r\n    setLoading(true);\r\n    setError('');\r\n    \r\n    try {\r\n      // You'd need to modify your API to handle coordinates\r\n      // This is a placeholder assuming your API can handle it\r\n      const weatherResponse = await fetchWeatherData(`${lat},${lon}`);\r\n      setWeatherData(weatherResponse);\r\n      setBackgroundCondition(weatherResponse.condition);\r\n      \r\n      const forecastResponse = await fetchForecastData(`${lat},${lon}`);\r\n      setForecastData(forecastResponse);\r\n      \r\n      setLoading(false);\r\n    } catch (err) {\r\n      setError(\"Couldn't get weather for your location. Please search for a city instead.\");\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleSearch = async (city) => {\r\n    setLoading(true);\r\n    setError('');\r\n    \r\n    try {\r\n      const weatherResponse = await fetchWeatherData(city);\r\n      setWeatherData(weatherResponse);\r\n      setBackgroundCondition(weatherResponse.condition);\r\n      \r\n      const forecastResponse = await fetchForecastData(city);\r\n      setForecastData(forecastResponse);\r\n      \r\n      setLoading(false);\r\n    } catch (err) {\r\n      setError(err.message || 'An error occurred. Please try again.');\r\n      setLoading(false);\r\n      setWeatherData(null);\r\n      setForecastData(null);\r\n    }\r\n  };\r\n\r\n  // Render dynamic weather-based background elements\r\n  const renderWeatherBackground = () => {\r\n    if (!backgroundCondition) return null;\r\n    \r\n    const conditionLower = backgroundCondition.toLowerCase();\r\n    \r\n    if (conditionLower.includes('clear') || conditionLower.includes('sun')) {\r\n      return (\r\n        <div className=\"weather-background\">\r\n          <div className=\"sun-animation\"></div>\r\n        </div>\r\n      );\r\n    } else if (conditionLower.includes('cloud') && !conditionLower.includes('rain')) {\r\n      return (\r\n        <div className=\"weather-background\">\r\n          <div className=\"cloud cloud-1\"></div>\r\n          <div className=\"cloud cloud-2\"></div>\r\n        </div>\r\n      );\r\n    }\r\n    \r\n    return null;\r\n  };\r\n\r\n  return (\r\n    <div className=\"app-container\">\r\n      {renderWeatherBackground()}\r\n      {backgroundCondition && <WeatherAnimations condition={backgroundCondition} />}\r\n      \r\n      <h1 className=\"app-title\">Weather Forecast</h1>\r\n      <SearchBar onSearch={handleSearch} />\r\n      \r\n      {loading && <div className=\"loading-spinner\">Loading weather data...</div>}\r\n      \r\n      {error && <div className=\"error-message\">{error}</div>}\r\n      \r\n      {weatherData && <CurrentWeather data={weatherData} />}\r\n      \r\n      {forecastData && <Forecast data={forecastData} />}\r\n      \r\n      {(weatherData || forecastData) && (\r\n        <div className=\"app-footer\">\r\n          <p>Data provided by OpenWeatherMap</p>\r\n          <div className=\"creator-info\">\r\n            <span>Created by Neil Patrick</span>\r\n            <a href=\"https://github.com/NeilPatrickSaldanha\" target=\"_blank\" rel=\"noopener noreferrer\">GitHub</a>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}