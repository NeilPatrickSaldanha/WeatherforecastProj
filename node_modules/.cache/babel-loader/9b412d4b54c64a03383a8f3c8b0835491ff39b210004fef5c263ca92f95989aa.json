{"ast":null,"code":"import axios from 'axios';\nimport { formatWeatherData, formatForecastData } from './helpers';\n\n// Your OpenWeatherMap API key\nconst API_KEY = '44463d054f897d96ac24f1aead11948f';\nconst BASE_URL = 'https://api.openweathermap.org/data/2.5';\n\n// Fetch current weather data\nexport const fetchWeatherData = async city => {\n  try {\n    const response = await axios.get(`${BASE_URL}/weather`, {\n      params: {\n        q: city,\n        units: 'metric',\n        appid: API_KEY\n      }\n    });\n    return formatWeatherData(response.data);\n  } catch (error) {\n    if (error.response && error.response.status === 404) {\n      throw new Error('City not found. Please check the spelling and try again.');\n    } else {\n      throw new Error('Failed to fetch weather data. Please try again later.');\n    }\n  }\n};\n\n// Fetch 5-day forecast data\nexport const fetchForecastData = async city => {\n  try {\n    const response = await axios.get(`${BASE_URL}/forecast`, {\n      params: {\n        q: city,\n        units: 'metric',\n        appid: API_KEY\n      }\n    });\n    return formatForecastData(response.data);\n  } catch (error) {\n    if (error.response && error.response.status === 404) {\n      throw new Error('Forecast data not available for this location.');\n    } else {\n      throw new Error('Failed to fetch forecast data. Please try again later.');\n    }\n  }\n};\n\n// Remove or comment out the mock data export\n// export default mockFunctions;","map":{"version":3,"names":["axios","formatWeatherData","formatForecastData","API_KEY","BASE_URL","fetchWeatherData","city","response","get","params","q","units","appid","data","error","status","Error","fetchForecastData"],"sources":["C:/Users/user/weather-app/src/utils/api.js"],"sourcesContent":["import axios from 'axios';\r\nimport { formatWeatherData, formatForecastData } from './helpers';\r\n\r\n// Your OpenWeatherMap API key\r\nconst API_KEY = '44463d054f897d96ac24f1aead11948f';\r\nconst BASE_URL = 'https://api.openweathermap.org/data/2.5';\r\n\r\n// Fetch current weather data\r\nexport const fetchWeatherData = async (city) => {\r\n  try {\r\n    const response = await axios.get(`${BASE_URL}/weather`, {\r\n      params: {\r\n        q: city,\r\n        units: 'metric',\r\n        appid: API_KEY\r\n      }\r\n    });\r\n    \r\n    return formatWeatherData(response.data);\r\n  } catch (error) {\r\n    if (error.response && error.response.status === 404) {\r\n      throw new Error('City not found. Please check the spelling and try again.');\r\n    } else {\r\n      throw new Error('Failed to fetch weather data. Please try again later.');\r\n    }\r\n  }\r\n};\r\n\r\n// Fetch 5-day forecast data\r\nexport const fetchForecastData = async (city) => {\r\n  try {\r\n    const response = await axios.get(`${BASE_URL}/forecast`, {\r\n      params: {\r\n        q: city,\r\n        units: 'metric',\r\n        appid: API_KEY\r\n      }\r\n    });\r\n    \r\n    return formatForecastData(response.data);\r\n  } catch (error) {\r\n    if (error.response && error.response.status === 404) {\r\n      throw new Error('Forecast data not available for this location.');\r\n    } else {\r\n      throw new Error('Failed to fetch forecast data. Please try again later.');\r\n    }\r\n  }\r\n};\r\n\r\n// Remove or comment out the mock data export\r\n// export default mockFunctions;"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,iBAAiB,EAAEC,kBAAkB,QAAQ,WAAW;;AAEjE;AACA,MAAMC,OAAO,GAAG,kCAAkC;AAClD,MAAMC,QAAQ,GAAG,yCAAyC;;AAE1D;AACA,OAAO,MAAMC,gBAAgB,GAAG,MAAOC,IAAI,IAAK;EAC9C,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMP,KAAK,CAACQ,GAAG,CAAC,GAAGJ,QAAQ,UAAU,EAAE;MACtDK,MAAM,EAAE;QACNC,CAAC,EAAEJ,IAAI;QACPK,KAAK,EAAE,QAAQ;QACfC,KAAK,EAAET;MACT;IACF,CAAC,CAAC;IAEF,OAAOF,iBAAiB,CAACM,QAAQ,CAACM,IAAI,CAAC;EACzC,CAAC,CAAC,OAAOC,KAAK,EAAE;IACd,IAAIA,KAAK,CAACP,QAAQ,IAAIO,KAAK,CAACP,QAAQ,CAACQ,MAAM,KAAK,GAAG,EAAE;MACnD,MAAM,IAAIC,KAAK,CAAC,0DAA0D,CAAC;IAC7E,CAAC,MAAM;MACL,MAAM,IAAIA,KAAK,CAAC,uDAAuD,CAAC;IAC1E;EACF;AACF,CAAC;;AAED;AACA,OAAO,MAAMC,iBAAiB,GAAG,MAAOX,IAAI,IAAK;EAC/C,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMP,KAAK,CAACQ,GAAG,CAAC,GAAGJ,QAAQ,WAAW,EAAE;MACvDK,MAAM,EAAE;QACNC,CAAC,EAAEJ,IAAI;QACPK,KAAK,EAAE,QAAQ;QACfC,KAAK,EAAET;MACT;IACF,CAAC,CAAC;IAEF,OAAOD,kBAAkB,CAACK,QAAQ,CAACM,IAAI,CAAC;EAC1C,CAAC,CAAC,OAAOC,KAAK,EAAE;IACd,IAAIA,KAAK,CAACP,QAAQ,IAAIO,KAAK,CAACP,QAAQ,CAACQ,MAAM,KAAK,GAAG,EAAE;MACnD,MAAM,IAAIC,KAAK,CAAC,gDAAgD,CAAC;IACnE,CAAC,MAAM;MACL,MAAM,IAAIA,KAAK,CAAC,wDAAwD,CAAC;IAC3E;EACF;AACF,CAAC;;AAED;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}