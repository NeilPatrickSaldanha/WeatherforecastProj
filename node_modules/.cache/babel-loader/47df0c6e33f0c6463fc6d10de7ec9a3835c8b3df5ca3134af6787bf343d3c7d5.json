{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\weatherApp\\\\src\\\\components\\\\WeatherAnimations.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WeatherAnimations = ({\n  condition\n}) => {\n  _s();\n  const [animationElements, setAnimationElements] = useState([]);\n  useEffect(() => {\n    // Clean up existing animation elements\n    setAnimationElements([]);\n\n    // Create new animation elements based on weather condition\n    if (condition) {\n      const conditionLower = condition.toLowerCase();\n      if (conditionLower.includes('rain') || conditionLower.includes('drizzle')) {\n        // Create raindrops\n        const drops = [];\n        const dropCount = 80;\n        for (let i = 0; i < dropCount; i++) {\n          const delay = Math.random() * 5;\n          const duration = 0.5 + Math.random() * 0.8;\n          drops.push({\n            id: `raindrop-${i}`,\n            type: 'raindrop',\n            style: {\n              left: `${Math.random() * 100}%`,\n              animationDelay: `${delay}s`,\n              animationDuration: `${duration}s`,\n              opacity: 0.6 + Math.random() * 0.4\n            }\n          });\n        }\n        setAnimationElements(drops);\n      } else if (conditionLower.includes('snow')) {\n        // Create snowflakes\n        const flakes = [];\n        const flakeCount = 60;\n        for (let i = 0; i < flakeCount; i++) {\n          const size = 2 + Math.random() * 6;\n          const delay = Math.random() * 5;\n          const duration = 5 + Math.random() * 10;\n          flakes.push({\n            id: `snowflake-${i}`,\n            type: 'snowflake',\n            style: {\n              left: `${Math.random() * 100}%`,\n              width: `${size}px`,\n              height: `${size}px`,\n              animationDelay: `${delay}s`,\n              animationDuration: `${duration}s`,\n              opacity: 0.6 + Math.random() * 0.4\n            }\n          });\n        }\n        setAnimationElements(flakes);\n      } else if (conditionLower.includes('thunder')) {\n        // Lightning effect\n        const thunderElements = [];\n        for (let i = 0; i < 3; i++) {\n          const delay = 2 + Math.random() * 8;\n          thunderElements.push({\n            id: `lightning-${i}`,\n            type: 'lightning',\n            style: {\n              animationDelay: `${delay}s`\n            }\n          });\n        }\n        setAnimationElements(thunderElements);\n      } else if (conditionLower.includes('fog') || conditionLower.includes('mist')) {\n        // Fog particles\n        const fogElements = [];\n        const fogCount = 8;\n        for (let i = 0; i < fogCount; i++) {\n          const size = 100 + Math.random() * 150;\n          const top = Math.random() * 100;\n          const left = Math.random() * 100;\n          const duration = 20 + Math.random() * 30;\n          fogElements.push({\n            id: `fog-${i}`,\n            type: 'fog',\n            style: {\n              top: `${top}%`,\n              left: `${left}%`,\n              width: `${size}px`,\n              height: `${size}px`,\n              animationDuration: `${duration}s`\n            }\n          });\n        }\n        setAnimationElements(fogElements);\n      }\n    }\n  }, [condition]);\n  if (animationElements.length === 0) return null;\n\n  // Determine which animation class to use\n  const getAnimationClass = () => {\n    const conditionLower = condition.toLowerCase();\n    if (conditionLower.includes('rain') || conditionLower.includes('drizzle')) {\n      return 'animate-rain';\n    } else if (conditionLower.includes('snow')) {\n      return 'animate-snow';\n    } else if (conditionLower.includes('thunder')) {\n      return 'animate-thunder';\n    } else if (conditionLower.includes('fog') || conditionLower.includes('mist')) {\n      return 'animate-fog';\n    }\n    return '';\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: getAnimationClass(),\n    children: animationElements.map(element => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: element.type,\n      style: element.style\n    }, element.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 127,\n    columnNumber: 5\n  }, this);\n};\n_s(WeatherAnimations, \"VO3sLQ8uTKMLm2mt4QSIa0jnRPw=\");\n_c = WeatherAnimations;\nexport default WeatherAnimations;\nvar _c;\n$RefreshReg$(_c, \"WeatherAnimations\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","WeatherAnimations","condition","_s","animationElements","setAnimationElements","conditionLower","toLowerCase","includes","drops","dropCount","i","delay","Math","random","duration","push","id","type","style","left","animationDelay","animationDuration","opacity","flakes","flakeCount","size","width","height","thunderElements","fogElements","fogCount","top","length","getAnimationClass","className","children","map","element","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/user/weatherApp/src/components/WeatherAnimations.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\n\r\nconst WeatherAnimations = ({ condition }) => {\r\n  const [animationElements, setAnimationElements] = useState([]);\r\n  \r\n  useEffect(() => {\r\n    // Clean up existing animation elements\r\n    setAnimationElements([]);\r\n    \r\n    // Create new animation elements based on weather condition\r\n    if (condition) {\r\n      const conditionLower = condition.toLowerCase();\r\n      \r\n      if (conditionLower.includes('rain') || conditionLower.includes('drizzle')) {\r\n        // Create raindrops\r\n        const drops = [];\r\n        const dropCount = 80;\r\n        \r\n        for (let i = 0; i < dropCount; i++) {\r\n          const delay = Math.random() * 5;\r\n          const duration = 0.5 + Math.random() * 0.8;\r\n          \r\n          drops.push({\r\n            id: `raindrop-${i}`,\r\n            type: 'raindrop',\r\n            style: {\r\n              left: `${Math.random() * 100}%`,\r\n              animationDelay: `${delay}s`,\r\n              animationDuration: `${duration}s`,\r\n              opacity: 0.6 + Math.random() * 0.4\r\n            }\r\n          });\r\n        }\r\n        \r\n        setAnimationElements(drops);\r\n      } \r\n      else if (conditionLower.includes('snow')) {\r\n        // Create snowflakes\r\n        const flakes = [];\r\n        const flakeCount = 60;\r\n        \r\n        for (let i = 0; i < flakeCount; i++) {\r\n          const size = 2 + Math.random() * 6;\r\n          const delay = Math.random() * 5;\r\n          const duration = 5 + Math.random() * 10;\r\n          \r\n          flakes.push({\r\n            id: `snowflake-${i}`,\r\n            type: 'snowflake',\r\n            style: {\r\n              left: `${Math.random() * 100}%`,\r\n              width: `${size}px`,\r\n              height: `${size}px`,\r\n              animationDelay: `${delay}s`,\r\n              animationDuration: `${duration}s`,\r\n              opacity: 0.6 + Math.random() * 0.4\r\n            }\r\n          });\r\n        }\r\n        \r\n        setAnimationElements(flakes);\r\n      }\r\n      else if (conditionLower.includes('thunder')) {\r\n        // Lightning effect\r\n        const thunderElements = [];\r\n        \r\n        for (let i = 0; i < 3; i++) {\r\n          const delay = 2 + Math.random() * 8;\r\n          thunderElements.push({\r\n            id: `lightning-${i}`,\r\n            type: 'lightning',\r\n            style: {\r\n              animationDelay: `${delay}s`\r\n            }\r\n          });\r\n        }\r\n        \r\n        setAnimationElements(thunderElements);\r\n      }\r\n      else if (conditionLower.includes('fog') || conditionLower.includes('mist')) {\r\n        // Fog particles\r\n        const fogElements = [];\r\n        const fogCount = 8;\r\n        \r\n        for (let i = 0; i < fogCount; i++) {\r\n          const size = 100 + Math.random() * 150;\r\n          const top = Math.random() * 100;\r\n          const left = Math.random() * 100;\r\n          const duration = 20 + Math.random() * 30;\r\n          \r\n          fogElements.push({\r\n            id: `fog-${i}`,\r\n            type: 'fog',\r\n            style: {\r\n              top: `${top}%`,\r\n              left: `${left}%`,\r\n              width: `${size}px`,\r\n              height: `${size}px`,\r\n              animationDuration: `${duration}s`\r\n            }\r\n          });\r\n        }\r\n        \r\n        setAnimationElements(fogElements);\r\n      }\r\n    }\r\n  }, [condition]);\r\n  \r\n  if (animationElements.length === 0) return null;\r\n  \r\n  // Determine which animation class to use\r\n  const getAnimationClass = () => {\r\n    const conditionLower = condition.toLowerCase();\r\n    if (conditionLower.includes('rain') || conditionLower.includes('drizzle')) {\r\n      return 'animate-rain';\r\n    } else if (conditionLower.includes('snow')) {\r\n      return 'animate-snow';\r\n    } else if (conditionLower.includes('thunder')) {\r\n      return 'animate-thunder';\r\n    } else if (conditionLower.includes('fog') || conditionLower.includes('mist')) {\r\n      return 'animate-fog';\r\n    }\r\n    return '';\r\n  };\r\n  \r\n  return (\r\n    <div className={getAnimationClass()}>\r\n      {animationElements.map((element) => (\r\n        <div \r\n          key={element.id} \r\n          className={element.type} \r\n          style={element.style}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WeatherAnimations;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}